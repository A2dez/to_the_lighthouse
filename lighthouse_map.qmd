---
title: "Mapping out the lighthouses"
---

Geocomputation with R
https://r.geocompx.org/


```{r}
# Lighthouse data is on Wikipedia in three tables
library(polite)
library(measurements)
library(tidyverse)
url = 'https://en.wikipedia.org/wiki/List_of_lighthouses_in_Ireland'
url_bow <- polite::bow(url)

lighthouse_data <-
  polite::scrape(url_bow) %>%  # scrape web page
  rvest::html_nodes("table.wikitable") %>% # pull out specific table
  rvest::html_table(fill = TRUE)  %>% 
  bind_rows
lighthouse_data$id = seq_along(lighthouse_data$Name)

lighthouse_data$operator <- if_else(!is.na(lighthouse_data$`Inactive  since`), 
                                    'Inactive', if_else(!is.na(lighthouse_data$`Operated by`), 
                                                        'Other', 
                                                        'CIL') )
# lighthouse_data <- bind_rows(ind_html) 
lighthouse_data$location <-  str_extract(lighthouse_data$`Location  Coordinates`, "^([[:alpha:]]|\\s)+") 

lighthouse_data$latitude <- 
  lighthouse_data$`Location  Coordinates` %>% str_extract('\\d{1,2}°\\d{1,2}′\\d{0,2}″(?=N)') %>% 
  str_replace_all('[°′″]', ' ') %>% 
  str_trim %>% 
  conv_unit( from = "deg_min_sec", to = "dec_deg") %>% 
  as.numeric
  

lighthouse_data$longitude <- 
  lighthouse_data$`Location  Coordinates` %>% str_extract('\\d{1,2}°\\d{1,2}′\\d{0,2}″(?=W)') %>% 
  str_replace_all('[°′″]', ' ') %>% 
  str_trim %>% 
  conv_unit( from = "deg_min_sec", to = "dec_deg") %>% 
  as.numeric %>% 
  `*`(-1) #west not east
#View(lighthouse_data)
write_csv(lighthouse_data, 'lighthouse_data.csv')
```


```{r}
library(ggmap)
library(gridExtra)
?register_stadiamaps
register_stadiamaps(key = "4cac8423-a349-4b92-a41f-94141e21eb10", write = T)


bbox = c(left = -12, bottom = 50, right = -4, top = 56)
map <- get_stadiamap( bbox, 
                      zoom = 12, 
                      maptype = "stamen_terrain")


map %>% 
  ggmap() +
  geom_point(data=lighthouse_data,
             aes(x=longitude,y=latitude, color=operator), #,
             size=4,alpha=.7)


#Mild non-Atlantic way coordinates
# bbox = c(left = -9, bottom = 50, right = -4, top = 54.5)
# 
# 
# map2 <- get_stadiamap( bbox, 
#                       zoom = 10, 
#                       maptype = "stamen_terrain")


#
?get_stadiamap
ggmap(map2) #+
  theme_void() +
  theme(
    plot.title = element_text(colour = "orange"),
    panel.border = element_rect(colour = "grey", fill=NA, size=2)
  )


```

To do:

```{r}
# Maps
# - osm maps access
# - google maps api
  # ggmap::register_google()
```

References:

```{r}
#plot Ireland with small areas using a shape file
# https://will-ball.github.io/Ireland-Deprivation-Mapping/
#   https://stackoverflow.com/questions/65233613/plot-a-map-using-lat-and-long-with-r
# 
# # ggmap guide
# https://towardsdatascience.com/a-guide-to-using-ggmap-in-r-b283efdff2af
# 
# #batch geocodsing 
#   #for the property project
#   https://www.shanelynn.ie/massive-geocoding-with-r-and-google-maps/
#   
#     https://www.littlemissdata.com/blog/maps
7
# Choropleth Ireland
# https://www.cso.ie/en/methods/research/otherresearch/sdgresearch/mappingatableofdatawithesrishapefilesinr/
```

```{r}
library(rvest)
library(httr)
library(polite)
library(measurements)
library(osmdata)
library(ggmap)
library(tidyverse)
# citation("ggmap")
# D. Kahle and H. Wickham. ggmap: Spatial Visualization with ggplot2. The R Journal, 5(1), 144-161. URL http://journal.r-project.org/archive/2013-1/kahle-wickham.pdf

```

So I've had enough of trying to workout slash remember where all of the lighthouses are so I decided to gather and plot all of the data in one easy to read map. It's also a decent excuse to learn how to plot maps as I don't do much of that in work and it's always interesting and useful to learn about new kinds of data. Now Wikipedia has a page of lighthouses in Ireland, but they are grouped in three hard-to-read tables. The first table shows all the of the active lighthouses maintained by the Commissioner of Irish Lights, and this includes all of the sexy lighthouses you'll see on TV programs and tourist brochures. There's a table with active lighthouses maintained by anyone else, usually local harbours, and these are mostly perfunctory, unmemorable ones which draw only the completists, and then lastly there are the inactive lighthouses which sit there in various states of disrepair, ranging from total disuse to being mini-hotels for tourists. All groups occur in Wicklow Town. You've got your classic modern lighthouse right at the edge of the land on Wicklow Head. Beside it is that beautiful, octagonal 18th Century Structure, which you and your loved ones can rent out, and in between is a less flashy unmaintained old stone structure. Finally, the local harbour has a small lighthouse used for helping the fishermen get in and out of the harbour.\

```{r}



```

First off we need to get the data:

```{r}
# Lighthouse data is on Wikipedia in three tables
library(polite)
library(measurements)
url = 'https://en.wikipedia.org/wiki/List_of_lighthouses_in_Ireland'
url_bow <- polite::bow(url)

lighthouse_data <-
  polite::scrape(url_bow) %>%  # scrape web page
  rvest::html_nodes("table.wikitable") %>% # pull out specific table
  rvest::html_table(fill = TRUE)  %>% 
  bind_rows
lighthouse_data$id = seq_along(lighthouse_data$Name)

lighthouse_data$operator <- if_else(!is.na(lighthouse_data$`Inactive  since`), 
                                    'Inactive', if_else(!is.na(lighthouse_data$`Operated by`), 
                                                        'Other', 
                                                        'CIL') )
# lighthouse_data <- bind_rows(ind_html) 
lighthouse_data$location <-  str_extract(lighthouse_data$`Location  Coordinates`, "^([[:alpha:]]|\\s)+") 

lighthouse_data$latitude <- 
  lighthouse_data$`Location  Coordinates` %>% str_extract('\\d{1,2}°\\d{1,2}′\\d{0,2}″(?=N)') %>% 
  str_replace_all('[°′″]', ' ') %>% 
  str_trim %>% 
  conv_unit( from = "deg_min_sec", to = "dec_deg") %>% 
  as.numeric
  

lighthouse_data$longitude <- 
  lighthouse_data$`Location  Coordinates` %>% str_extract('\\d{1,2}°\\d{1,2}′\\d{0,2}″(?=W)') %>% 
  str_replace_all('[°′″]', ' ') %>% 
  str_trim %>% 
  conv_unit( from = "deg_min_sec", to = "dec_deg") %>% 
  as.numeric %>% 
  `*`(-1) #west not east

View(lighthouse_data)
```

-   <div>

    ```{r}




    # 51°28′37″
    #  [1] "Name"                 
    #  [2] "Image"                
    #  [3] "Location  Coordinates"
    #  [4] "County"               
    #  [5] "Water body"           
    #  [6] "Year built"           
    #  [7] "Tower height"         
    #  [8] "Focal height"         
    #  [9] "Range"                
    # [10] "Waterbody"            
    # [11] "Built"                
    # [12] "Tower Height"         
    # [13] "Focal Height"         
    # [14] "Operated by"          
    # [15] "Inactive  since"      
    # [16] "Notes"  

    # install.packages("measurements") 
    # 
    # # lat <- 
    #   conv_unit('51 28 37', from = "deg_min_sec", to = "dec_deg")

    # 51°28′37″
    # https://stackoverflow.com/questions/69484220/convert-dms-coordinates-to-decimal-degrees-in-r
    # lat <- conv_unit('21 11 24.32', from = "deg_min_sec", to = "dec_deg")
    # long <- conv_unit('104 38 26.88' , from = "deg_min_sec", to = "dec_deg")
    ```

   

```{r}

ireland_map <- get_map( getbb('ireland'),
                        source="stadia", 
                        color = 'bw') #, maptype='watercolor'

ireland_map <- get_stadiamap( getbb('ireland'),
                        source="stadia", 
                        color = 'bw') #, maptype='watercolor'

# lighthouse_locations <- data.frame(lat = c(51.477),
#                                lon = c(-9.705))

# ggmap(ireland_map) +
#   geom_point(data = lighthouse_data, 
#              aes(x = longitude, 
#                  y = latitude, 
#                  shape = operator,
#                  color = operator), 
#              size = 2)
# ?geom_label


ggmap(ireland_map) +
  geom_label(data = lighthouse_data, 
             aes(x = longitude, 
                 y = latitude, 
                 shape = operator,
                 color = operator,
                 label = Name %>% str_replace(' ?[Ll]ighthouse', ''), 
                 check_overlap = T
             ),
             size = 2) 
  facet_wrap(~lighthouse_data$operator)
  
?get_stadiamap
```

```{r}


# install.packages('rlist')
# 
# library(XML)
# library(RCurl)
# library(rlist)
# 
# # theurl <- getURL(url,.opts = list(ssl.verifypeer = FALSE) )
# theurl <- getURL(url)
# tables <- readHTMLTable(theurl)
# tables <- list.clean(tables, fun = is.null, recursive = FALSE)
# n.rows <- unlist(lapply(tables, function(t) dim(t)[1]))
# 
# str(tables)
# tables[1]
# table[[2]]
# tables %>% glimpse
# table %>% str
# tables
# library("httr")
# install.packages
# URL <- "http://modules.ussquash.com/ssm/pages/leagues/list_scorecard.asp?id=105252"
# temp <- tempfile(fileext = ".html")
# GET(url = URL, user_agent("Mozilla/5.0"), write_disk(temp))
# 
# library("XML")
# df <- readHTMLTable(temp)
# df <- df[[4]]
# 
# tables[3]
# length(tables)

```

\

```{r}
lisbon_map <- get_map( getbb('lisbon'), source="osm")

```

\

```{r}
# sapply(c('maps', 'mapdata'), install.packages)
# library(maps)
# library(mapdata)
# 
# install.packages('osmdata')
# library(osmdata)
# install.packages("ggmap")
# library(ggmap)
# 
#  
#  lisbon_map <- get_map( getbb('dublin'), source="stamen")
#  ggmap(lisbon_map)
# 
#  lisbon_watercolor <- get_map( getbb('ireland'), maptype='watercolor', source="stamen")
# ggmap(lisbon_watercolor)
# 
# lisbon_locations <- data.frame(lat = c(51.477),
#                                lon = c(-9.705))

# lisbon_map <- get_map('Lisbon', maptype='satellite', source="google", api_key = api_secret, zoom=12)

# ggmap(lisbon_watercolor) +
#   geom_point(data = lisbon_locations, aes(x = lon, y = lat), color = "red", size = 4)

```

```{r}
# library(maps)       
# library(mapdata)    
# #Option 1
# map('worldHires',
#     c( 'Ireland', 'UK'),
#     xlim=c(-11,-5.4), ylim=c(51.4,55.5)) 
```

get_map issues

```{r}
Error in `get_googlemap()`:
! Google now requires an API key; see `ggmap::register_google()`.
Backtrace:
 1. ggmap::get_map(getbb("ireland"), source = "google", color = "bw")
 2. ggmap::get_googlemap(...)
> ireland_map <- get_map( getbb('ireland'),
+                         source="stadia", 
+                         color = 'bw') #, maptype='watercolor'
Error in `get_map()`:
! Invalid Stadia `maptype`, see `get_stadiamap()`.
Backtrace:
 1. ggmap::get_map(getbb("ireland"), source = "stadia", color = "bw")
> ireland_map <- get_map( getbb('ireland'),
+                         source="osm", 
+                         color = 'bw') #, maptype='watercolor'
Error: OSM is at least temporarily not supported, see https://github.com/dkahle/ggmap/issues/117.
> ireland_map <- get_map( getbb('ireland'),
+                         source="stadia", 
+                         color = 'bw') #, maptype='watercolor'
Error in `get_map()`:
! Invalid Stadia `maptype`, see `get_stadiamap()`.
Backtrace:
 1. ggmap::get_map(getbb("ireland"), source = "stadia", color = "bw")
```





```{r}

# By interacting with Copilot, you agree to the Terms of Use and confirm you’ve reviewed the Privacy Statement.
# give me code in R to draw a map of Ireland with coordinates of all of hte lighthouses marked on it
# Sure thing! Here's a code snippet in R that will help you draw a map of Ireland with the coordinates of all the lighthouses marked on it. You'll need to have the ggplot2 and sf packages installed. If you don't have them yet, you can install them using install.packages("ggplot2") and install.packages("sf").


# Load necessary libraries
library(ggplot2)
library(sf)

# Read the shapefile for Ireland (you can download it from a reliable source)
ireland <- st_read("path_to_your_shapefile/Ireland_shapefile.shp")
ireland <- st_read("C:/Users/pc/projects/to_the_lighthouse/Ireland_shapefile/ie_1km.shp")

folder_path <- 'C:/Users/pc/projects/to_the_lighthouse/ireland-and-northern-ireland-latest-free'
shp_filename <- "gis_osm_roads_free_1.shp"

ireland <- st_read(file.path(folder_path, shp_filename))
"C:/Users/pc/projects/to_the_lighthouse/ireland-and-northern-ireland-latest-free/gis_osm_roads_free_1.shp"
ireland <- st_read("C:/Users/pc/projects/to_the_lighthouse/ireland-and-northern-ireland-latest-free/gis_osm_transport_a_free_1.shp")
# Create a data frame with the coordinates of the lighthouses
lighthouses <- data.frame(
  name = c("Hook Lighthouse", "Fastnet Lighthouse", "Baily Lighthouse", "Galley Head Lighthouse"),
  lat = c(52.123, 51.389, 53.364, 51.516),
  lon = c(-6.929, -9.601, -6.063, -8.852)
)


# Convert the lighthouses data frame to an sf object
lighthouses_sf <- st_as_sf(lighthouses, coords = c("lon", "lat"), crs = 4326)

# Plot the map
ggplot() +
  geom_sf(data = ireland, fill = "lightblue", color = "black") +
  geom_sf(data = lighthouses_sf, color = "red", size = 3, shape = 21, fill = "yellow") +
  theme_minimal() +
  labs(title = "Lighthouses in Ireland", x = "Longitude", y = "Latitude")
# Make sure to replace "path_to_your_shapefile/Ireland_shapefile.shp" with the actual path to your shapefile of Ireland. This code will create a map of Ireland with the lighthouses marked in red and filled with yellow. Enjoy mapping!



Message Copilot

cd C:\Users\pc\AppData\Local\Temp\RtmpAvrZG8\downloaded_packages

```
```{r}
#CSO shapefile + choropleth #not working can't access file
tmpdir <- tempdir()
url <- paste0("http://census.cso.ie/censusasp/saps/boundaries/", "Census2011_NUTS3_generalised20m.zip")
file <- basename(url)
download.file(url, file) #not working
unzip(file, exdir = tmpdir)
shapeFile <- paste0(tmpdir,"\\Census2011_NUTS3_ge
```
Data 
https://download.geofabrik.de/europe/ireland-and-northern-ireland.html

```{r}
ireland <- st_read("C:/Users/pc/projects/to_the_lighthouse/ireland-and-northern-ireland-latest-free/gis_osm_transport_a_free_1.shp")
# Create a data frame with the coordinates of the lighthouses
lighthouses <- data.frame(
  name = c("Hook Lighthouse", "Fastnet Lighthouse", "Baily Lighthouse", "Galley Head Lighthouse"),
  lat = c(52.123, 51.389, 53.364, 51.516),
  lon = c(-6.929, -9.601, -6.063, -8.852)
)

shp_files <- list.files("C:/Users/pc/projects/to_the_lighthouse/Ireland_shapefile/ireland-and-northern-ireland-latest-free/", pattern = '.shp$', full.names = T)
shp_files -> x
x <- x[sapply(x, file.size) < 3000000]
ireland = st_read(x[1])

# Plot the map
plot_shp_lighthouses <- function(shp_filepath) {
  ireland = st_read(shp_filepath)
  ggplot() +
  geom_sf(data = ireland, fill = "lightblue", color = "black") +
  geom_sf(data = lighthouses_sf, color = "red", size = 3, shape = 21, fill = "yellow") +
  theme_minimal() +
  labs(title = basename(shp_filepath), x = "Longitude", y = "Latitude")
}

x = 2
plot_shp_lighthouses(shp_files[x])
```

https://stackoverflow.com/questions/49037471/how-do-i-include-ireland-in-my-map-in-r

```{r}
library(maps)
library(mapdata)
maps::map(
  database = "worldHires",
  regions = c("uk", "ireland"),
  xlim = c(-12, 2),
  ylim = c(49, 59),
  col = "gray90",
  fill = TRUE
  )
```


```{r}
#https://stackoverflow.com/questions/11056738/plotting-points-from-a-data-frame-using-openstreetmap
library( OpenStreetMap )

library( ggplot2 )
stores <- data.frame(name=c("Commercial","Union","Bedford"),
                     longitude=c(-70.25042295455933,-70.26050806045532,-70.27726650238037),
                     latitude=c(43.657471302616806,43.65663299041943,43.66091757424481))
lat <- c(43.68093,43.64278)
lon <- c(-70.29548,-70.24097)

portland <- OpenStreetMap::openmap( c( lat[1], lon[1] ), c( lat[2], lon[2] ),zoom = 15, 'osm')
```

```{r}
library(ggmap)
#citation("ggmap")

stores <- data.frame(name=c("Commercial","Union","Bedford"),
        longitude=c(-70.25042295455933,-70.26050806045532,-70.27726650238037),
        latitude=c(43.657471302616806,43.65663299041943,43.66091757424481))
location = c(-70.2954, 43.64278, -70.2350, 43.68093)

# Fetch the map
?get_map
portland = get_map(location = location, source = "stadia")

# Draw the map
portlandMap = ggmap(portland)

# Add the points layer
portlandMap = portlandMap + geom_point(data = stores, aes(x = longitude, y = latitude), size = 5)

# Add the labels
portlandMap + geom_text(data = stores, aes(label = name, x = longitude+.001, y = latitude), hjust = 0)
```


```{python}
import geopandas as gpd
import matplotlib.pyplot as plt
from shapely.geometry import Point
# ie_10km.shp
Ireland_shapefile.shp
# Read the shapefile for Ireland (you can download it from a reliable source)
ireland = gpd.read_file("path_to_your_shapefile/Ireland_shapefile.shp")

# Create a GeoDataFrame with the coordinates of the lighthouses
lighthouses = gpd.GeoDataFrame({
    'name': ["Hook Lighthouse", "Fastnet Lighthouse", "Baily Lighthouse", "Galley Head Lighthouse"],
    'geometry': [Point(-6.929, 52.123), Point(-9.601, 51.389), Point(-6.063, 53.364), Point(-8.852, 51.516)]
})

# Plot the map
fig, ax = plt.subplots(figsize=(10, 10))
ireland.plot(ax=ax, color='lightblue', edgecolor='black')
lighthouses.plot(ax=ax, color='red', markersize=50, marker='o', label='Lighthouses')

# Add labels
for x, y, label in zip(lighthouses.geometry.x, lighthouses.geometry.y, lighthouses.name):
    ax.text(x, y, label, fontsize=12, ha='right')

plt.title("Lighthouses in Ireland")
plt.xlabel("Longitude")
plt.ylabel("Latitude")
plt.legend()
plt.show()

```

